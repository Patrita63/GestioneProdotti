{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConfig } from 'src/app/shared/appconfig.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RESTAPIService = /*#__PURE__*/(() => {\n  class RESTAPIService {\n    constructor(http) {\n      this.http = http;\n      this.myhead = new HttpHeaders().set('Content-Type', 'application/json'); // PAT informazione presa dalla sessione\n      // https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\n\n      this.baseUrlAPI = AppConfig.settings.apiServer.apiUrlHttps; // 'https://localhost:44325';\n    }\n    /* constructor(private http: HttpClient) {\r\n      if(this.baseUrlAPI == \"\" || this.baseUrlAPI == null || this.baseUrlAPI == undefined) {\r\n        this.getAllDataFromConfig();\r\n      }\r\n    } */\n\n    /* getAllDataFromConfig() {\r\n      do {\r\n        this.baseUrlAPI = sessionStorage.getItem(\"apiUrlHttps\");\r\n        console.log('RESTAPIService getAllDataFromConfig - this.baseUrlAPI: ' + this.baseUrlAPI);\r\n        if(this.baseUrlAPI == \"\" || this.baseUrlAPI == null || this.baseUrlAPI == undefined) {\r\n          this.loadSettingsDataFromConfig(environment.name);\r\n        }\r\n      }\r\n      while (this.baseUrlAPI == \"\");\r\n    }\r\n        loadSettingsDataFromConfig(nomefileconfig: string) {\r\n      const jsonFile = 'assets/config/config.' + nomefileconfig + '.json';\r\n      console.log('RESTAPIService loadSettingsDataFromConfig - jsonFile: ' + jsonFile);\r\n      return new Promise<void>((resolve, reject) => {\r\n          this.http.get(jsonFile).subscribe(\r\n            (response: IAppConfig) => {\r\n            \r\n            // console.log('RESTAPIService loadSettingsDataFromConfig - response: ' + response);\r\n            console.log('RESTAPIService loadSettingsDataFromConfig - apiUrlHttp: ' + response.apiServer.apiUrlHttp);\r\n            console.log('RESTAPIService loadSettingsDataFromConfig - apiUrlHttps: ' + response.apiServer.apiUrlHttps);\r\n            this.saveInLocal('apiUrlHttp', response.apiServer.apiUrlHttp);\r\n            this.saveInLocal('apiUrlHttps', response.apiServer.apiUrlHttps);\r\n    \r\n            console.log('RESTAPIService loadSettingsDataFromConfig - productPagerItems: ' + response.GridPager.productPagerItems);\r\n            console.log('RESTAPIService loadSettingsDataFromConfig - productPagerItemsPerPage: ' + response.GridPager.productPagerItemsPerPage);\r\n            this.saveInLocal('productPagerItems', response.GridPager.productPagerItems);\r\n            this.saveInLocal('productPagerItemsPerPage', response.GridPager.productPagerItemsPerPage);\r\n            resolve();\r\n    \r\n          },\r\n          (err: any) => {\r\n            console.log(err);\r\n            reject(`Could not load file '${jsonFile}': ${JSON.stringify(err)}`);\r\n          }\r\n          )\r\n        });\r\n      }\r\n    \r\n      saveInLocal(key, val): void {\r\n        console.log('saveInLocal - RECEIVED key: ' + key + ' - value: ' + val);\r\n        sessionStorage.setItem(key, val);\r\n        // this.storage.set(key, val);\r\n        // this.sessiondata[key] = this.storage.get(key);\r\n      }\r\n    \r\n      getFromLocal(key): any {\r\n        // console.log('getFromLocal - RECEIVED key: ' + key); // + ' - value:' + this.sessiondata[key]);\r\n        // this.sessiondata[key] = this.storage.get(key);\r\n        console.log('getFromLocal - RECEIVED key: ' + key + ' - value:' + sessionStorage.getItem(key));\r\n        return sessionStorage.getItem(key);\r\n        // console.log(this.sessiondata);\r\n        // return this.sessiondata[key];\r\n      } */\n    // tslint:disable-next-line: typedef\n\n\n    getRegioni() {\n      /* if(this.baseUrlAPI == \"\" || this.baseUrlAPI == null || this.baseUrlAPI == undefined) {\r\n        this.getAllDataFromConfig();\r\n      }; */\n      console.log('RESTAPIService - getRegioni - this.baseUrlAPI: ' + this.baseUrlAPI);\n\n      if (this.baseUrlAPI != null) {\n        const urlAPI = this.baseUrlAPI + '/Api/getAllRegioni';\n        console.log('getRegioni - urlAPI: ' + urlAPI); // debugger;\n\n        return this.http.get(urlAPI, {\n          headers: this.myhead\n        });\n        /* .pipe(map((response: any) => {\r\n          const val = response;\r\n        })); */\n      }\n    }\n\n    getProvinceByIdRegione(idReg) {\n      const urlAPI = this.baseUrlAPI + '/Api/getProvinciaByIdRegione/' + idReg;\n      console.log('getProvinceByIdRegione - urlAPI: ' + urlAPI);\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      });\n    }\n\n    getComuniByIdProvincia(idProv) {\n      const urlAPI = this.baseUrlAPI + '/Api/getComByIdProvincia/' + idProv;\n      console.log('getComuniByIdProvincia - urlAPI: ' + urlAPI);\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      });\n    }\n\n    getDatiViewByIdComune(idCom) {\n      const urlAPI = this.baseUrlAPI + '/Api/getDatiView/' + idCom;\n      console.log('getDatiViewByIdComune - urlAPI: ' + urlAPI);\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      });\n    }\n\n  }\n\n  RESTAPIService.ɵfac = function RESTAPIService_Factory(t) {\n    return new (t || RESTAPIService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RESTAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RESTAPIService,\n    factory: RESTAPIService.ɵfac,\n    providedIn: 'root'\n  });\n  return RESTAPIService;\n})();","map":null,"metadata":{},"sourceType":"module"}