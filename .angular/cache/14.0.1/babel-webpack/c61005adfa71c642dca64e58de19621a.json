{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RESTAPIService = /*#__PURE__*/(() => {\n  class RESTAPIService {\n    constructor(http) {\n      this.http = http;\n      this.myhead = new HttpHeaders().set('Content-Type', 'application/json');\n      this.baseUrlAPI = 'https://localhost:44325';\n    } // tslint:disable-next-line: typedef\n\n\n    getRegioni() {\n      const urlAPI = this.baseUrlAPI + '/Api/getAllRegioni';\n      debugger;\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      }).pipe(map(response => {\n        const val = response;\n      }));\n    } // tslint:disable-next-line: typedef\n\n\n    getProvince(model) {\n      const urlAPI = this.baseUrlAPI + '/Api/getAllProvince';\n      return this.http.get(urlAPI, model).pipe(map(response => {\n        const val = response;\n      }));\n    } // tslint:disable-next-line: typedef\n\n\n    getComuni(model) {\n      const urlAPI = this.baseUrlAPI + '/Api/getAllComuni';\n      return this.http.get(urlAPI, model).pipe(map(response => {\n        const val = response;\n      }));\n    }\n\n  }\n\n  RESTAPIService.ɵfac = function RESTAPIService_Factory(t) {\n    return new (t || RESTAPIService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RESTAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RESTAPIService,\n    factory: RESTAPIService.ɵfac,\n    providedIn: 'root'\n  });\n  return RESTAPIService;\n})();","map":null,"metadata":{},"sourceType":"module"}