{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let RESTAPIService = /*#__PURE__*/(() => {\n  class RESTAPIService {\n    constructor(http) {\n      this.http = http;\n      this.myhead = new HttpHeaders().set('Content-Type', 'application/json'); // PATRIZIO informazione presa dalla sessione\n\n      this.baseUrlAPI = \"\"; // 'https://localhost:44325';\n\n      if (this.baseUrlAPI == \"\" || this.baseUrlAPI == null || this.baseUrlAPI == undefined) {\n        this.getAllDataFromConfig();\n      }\n    }\n\n    getAllDataFromConfig() {\n      do {\n        this.baseUrlAPI = sessionStorage.getItem(\"apiUrlHttps\");\n        console.log('RESTAPIService constructor - this.baseUrlAPI: ' + this.baseUrlAPI);\n\n        if (this.baseUrlAPI == \"\" || this.baseUrlAPI == null || this.baseUrlAPI == undefined) {\n          this.loadSettingsDataFromConfig(environment.name);\n        }\n      } while (this.baseUrlAPI == \"\");\n    }\n\n    loadSettingsDataFromConfig(nomefileconfig) {\n      const jsonFile = 'assets/config/config.' + nomefileconfig + '.json';\n      console.log('AppComponent loadSettingsDataFromConfig - jsonFile: ' + jsonFile);\n      return new Promise((resolve, reject) => {\n        this.http.get(jsonFile).subscribe(response => {\n          // console.log('RESTAPIService loadSettingsDataFromConfig - response: ' + response);\n          console.log('RESTAPIService loadSettingsDataFromConfig - apiUrlHttp: ' + response.apiServer.apiUrlHttp);\n          console.log('RESTAPIService loadSettingsDataFromConfig - apiUrlHttps: ' + response.apiServer.apiUrlHttps);\n          this.saveInLocal('apiUrlHttp', response.apiServer.apiUrlHttp);\n          this.saveInLocal('apiUrlHttps', response.apiServer.apiUrlHttps);\n          console.log('RESTAPIService loadSettingsDataFromConfig - productPagerItems: ' + response.GridPager.productPagerItems);\n          console.log('RESTAPIService loadSettingsDataFromConfig - productPagerItemsPerPage: ' + response.GridPager.productPagerItemsPerPage);\n          this.saveInLocal('productPagerItems', response.GridPager.productPagerItems);\n          this.saveInLocal('productPagerItemsPerPage', response.GridPager.productPagerItemsPerPage);\n          resolve();\n        }, err => {\n          console.log(err);\n          reject(`Could not load file '${jsonFile}': ${JSON.stringify(err)}`);\n        });\n      });\n    }\n\n    saveInLocal(key, val) {\n      console.log('saveInLocal - RECEIVED key: ' + key + ' - value: ' + val);\n      sessionStorage.setItem(key, val);\n      /* this.storage.set(key, val);\r\n      this.sessiondata[key] = this.storage.get(key); */\n    }\n\n    getFromLocal(key) {\n      // console.log('getFromLocal - RECEIVED key: ' + key); // + ' - value:' + this.sessiondata[key]);\n      // this.sessiondata[key] = this.storage.get(key);\n      console.log('getFromLocal - RECEIVED key: ' + key + ' - value:' + sessionStorage.getItem(key));\n      return sessionStorage.getItem(key);\n      /* console.log(this.sessiondata);\r\n      return this.sessiondata[key]; */\n    } // tslint:disable-next-line: typedef\n\n\n    getRegioni() {\n      if (this.baseUrlAPI == \"\" || this.baseUrlAPI == null || this.baseUrlAPI == undefined) {\n        this.getAllDataFromConfig();\n      } else {\n        const urlAPI = this.baseUrlAPI + '/Api/getAllRegioni';\n        console.log('getRegioni - urlAPI: ' + urlAPI); // debugger;\n\n        return this.http.get(urlAPI, {\n          headers: this.myhead\n        });\n        /* .pipe(map((response: any) => {\r\n          const val = response;\r\n        })); */\n      }\n    }\n\n    getProvinceByIdRegione(idReg) {\n      const urlAPI = this.baseUrlAPI + '/Api/getProvinciaByIdRegione/' + idReg;\n      console.log('getProvinceByIdRegione - urlAPI: ' + urlAPI);\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      });\n    }\n\n    getComuniByIdProvincia(idProv) {\n      const urlAPI = this.baseUrlAPI + '/Api/getComByIdProvincia/' + idProv;\n      console.log('getComuniByIdProvincia - urlAPI: ' + urlAPI);\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      });\n    }\n\n    getDatiViewByIdComune(idCom) {\n      const urlAPI = this.baseUrlAPI + '/Api/getDatiView/' + idCom;\n      console.log('getDatiViewByIdComune - urlAPI: ' + urlAPI);\n      return this.http.get(urlAPI, {\n        headers: this.myhead\n      });\n    }\n\n  }\n\n  RESTAPIService.ɵfac = function RESTAPIService_Factory(t) {\n    return new (t || RESTAPIService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  RESTAPIService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: RESTAPIService,\n    factory: RESTAPIService.ɵfac,\n    providedIn: 'root'\n  });\n  return RESTAPIService;\n})();","map":null,"metadata":{},"sourceType":"module"}